// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProSolutionFormsAPI.Data;

#nullable disable

namespace ProSolutionFormsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250411154835_Add InterviewOutcome to InterviewHE")]
    partial class AddInterviewOutcometoInterviewHE
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProSolutionFormsAPI.Models.ConfigModel", b =>
                {
                    b.Property<string>("ConfigID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("ConfigID")
                        .IsUnique();

                    b.ToTable("Config");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.CriminalConvictionModel", b =>
                {
                    b.Property<int>("CriminalConvictionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CriminalConvictionID"));

                    b.Property<string>("AcademicYearID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool?>("AgreeInfoIsCorrectStudent")
                        .HasColumnType("bit");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NoOffencesToDeclare")
                        .HasColumnType("bit");

                    b.Property<string>("SignedStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignedStudentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CriminalConvictionID");

                    b.ToTable("CriminalConviction");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.CriminalConvictionOffenceModel", b =>
                {
                    b.Property<int>("CriminalConvictionOffenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CriminalConvictionOffenceID"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CriminalConvictionModelCriminalConvictionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfOffence")
                        .HasColumnType("datetime2");

                    b.Property<string>("Offence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Penalty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CriminalConvictionOffenceID");

                    b.HasIndex("CriminalConvictionModelCriminalConvictionID");

                    b.ToTable("CriminalConvictionOffence");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.DropDownIntModel", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("DropDownInt", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.DropDownStringModel", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("DropDownString", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationEvidenceModel", b =>
                {
                    b.Property<int>("FundingEligibilityDeclarationEvidenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FundingEligibilityDeclarationEvidenceID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("EvidenceContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EvidenceContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EvidenceFileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("EvidenceTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FundingEligibilityDeclarationID")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageThumbnail")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FundingEligibilityDeclarationEvidenceID");

                    b.HasIndex("FundingEligibilityDeclarationID");

                    b.ToTable("FundingEligibilityDeclarationEvidence");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationModel", b =>
                {
                    b.Property<int>("FundingEligibilityDeclarationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FundingEligibilityDeclarationID"));

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeeExemptionReasonID")
                        .HasColumnType("int");

                    b.Property<string>("FeeExemptionReasonOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignedStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignedStudentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FundingEligibilityDeclarationID");

                    b.ToTable("FundingEligibilityDeclaration");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.InterviewHEModel", b =>
                {
                    b.Property<int>("InterviewHEID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterviewHEID"));

                    b.Property<string>("AcademicYearID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DifficultiesAndOrDisabilitiesFurtherDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinanciallySupportSelfDuringCourse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasDifficultiesAndOrDisabilities")
                        .HasColumnType("bit");

                    b.Property<int?>("HeardAboutCourse")
                        .HasColumnType("int");

                    b.Property<string>("HeardAboutCourseOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighestQualOnEntryDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HighestQualOnEntryLevel")
                        .HasColumnType("int");

                    b.Property<bool?>("InEmployment")
                        .HasColumnType("bit");

                    b.Property<int?>("InterviewOutcome")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAwareOfTuitionFee")
                        .HasColumnType("bit");

                    b.Property<int?>("LastEducationalEstablishmentAttended")
                        .HasColumnType("int");

                    b.Property<string>("LastEducationalEstablishmentAttendedOtherDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManageDemandsOfStudyAroundJobAndFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MethodOfFunding")
                        .HasColumnType("int");

                    b.Property<string>("MotivationForStudyingCourseAndIntendedNextSteps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferingID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionsAskedAndAdviceGiven")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SuitabilityAndRelevantQualificationsAndExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TuitionFeeAgreedTo")
                        .HasColumnType("decimal(19,4)");

                    b.Property<bool?>("UnderstandsStructureOfCourse")
                        .HasColumnType("bit");

                    b.HasKey("InterviewHEID");

                    b.ToTable("InterviewHE");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentEmergencyContactModel", b =>
                {
                    b.Property<int>("MedicalLearningSupportAndTripConsentEmergencyContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalLearningSupportAndTripConsentEmergencyContactID"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactOrder")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalLearningSupportAndTripConsentID")
                        .HasColumnType("int");

                    b.Property<string>("PostCodeIn")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PostCodeOut")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("RelationshipToStudent")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalLearningSupportAndTripConsentEmergencyContactID");

                    b.HasIndex("MedicalLearningSupportAndTripConsentID");

                    b.ToTable("MedicalLearningSupportAndTripConsentEmergencyContact");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentLearningDifficultyDisabilityModel", b =>
                {
                    b.Property<int>("MedicalLearningSupportAndTripConsentLearningDifficultyDisabilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalLearningSupportAndTripConsentLearningDifficultyDisabilityID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisabilityCategoryID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalLearningSupportAndTripConsentID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalLearningSupportAndTripConsentLearningDifficultyDisabilityID");

                    b.HasIndex("MedicalLearningSupportAndTripConsentID");

                    b.ToTable("MedicalLearningSupportAndTripConsentLearningDifficultyDisability");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentMedicalConditionModel", b =>
                {
                    b.Property<int>("MedicalLearningSupportAndTripConsentMedicalConditionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalLearningSupportAndTripConsentMedicalConditionID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalConditionTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalLearningSupportAndTripConsentID")
                        .HasColumnType("int");

                    b.Property<string>("MedicationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicationSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalLearningSupportAndTripConsentMedicalConditionID");

                    b.HasIndex("MedicalLearningSupportAndTripConsentID");

                    b.ToTable("MedicalLearningSupportAndTripConsentMedicalCondition");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentModel", b =>
                {
                    b.Property<int>("MedicalLearningSupportAndTripConsentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalLearningSupportAndTripConsentID"));

                    b.Property<string>("AcademicYearID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool?>("AgreeInfoIsCorrectParentCarer")
                        .HasColumnType("bit");

                    b.Property<bool?>("AgreeInfoIsCorrectStudent")
                        .HasColumnType("bit");

                    b.Property<bool?>("AgreeToKeepCollegeInformed")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanContactPriorSchoolOrCollege")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanContactStudent18PlusNOK")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanShareInformationWithPotentialEmployers")
                        .HasColumnType("bit");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriminalConvictionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FurtherSupportAtSchoolOrCollegeDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HadFurtherSupportAtSchoolOrCollege")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasAccessArrangements")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasBeenHospitalisedInLastYear")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasCriminalConvictions")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasEHCP")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasFSM")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasGivenPhotographicImagesConsent")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasGivenTripConsentParentCarer")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasGivenTripConsentStudent")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasLearningDifficultyDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasMedicalCondition")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalisationNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCareLeaver")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFromMilitaryServiceFamily")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLAC")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsYoungCarer")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfDoctor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfDoctorsPractice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiresLearningSupport")
                        .HasColumnType("bit");

                    b.Property<string>("SignedParentCarer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignedParentCarerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignedStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignedStudentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("MedicalLearningSupportAndTripConsentID");

                    b.ToTable("MedicalLearningSupportAndTripConsent");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.StudentDetailModel", b =>
                {
                    b.Property<int>("StudentDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentDetailID"));

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApplicationSourceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicationSourceID")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationSourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CAMCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CAMName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CriminalConvictionFormCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CriminalConvictionFormLatestSubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CriminalConvictionFormLatestSubmissionID")
                        .HasColumnType("int");

                    b.Property<int?>("CriminalConvictionFormNumberOfSubmissions")
                        .HasColumnType("int");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FundingEligibilityFormCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FundingEligibilityFormLatestSubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FundingEligibilityFormLatestSubmissionID")
                        .HasColumnType("int");

                    b.Property<int?>("FundingEligibilityFormNumberOfSubmissions")
                        .HasColumnType("int");

                    b.Property<string>("MedicalConsentFormReceivedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalConsentFormReceivedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MedicalFormCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("MedicalFormCourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MedicalFormLatestSubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalFormLatestSubmissionID")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalFormNumberOfSubmissions")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("StudentRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripPhotographicCosentObtainedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripPhotographicCosentObtainedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentDetailID");

                    b.ToTable("StudentDetail", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CAMCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CAMName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Student", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.StudentUniqueReferenceModel", b =>
                {
                    b.Property<Guid>("StudentUniqueReferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("StudentUniqueReferenceID");

                    b.HasIndex("StudentRef")
                        .IsUnique();

                    b.ToTable("StudentUniqueReference");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.SystemFileModel", b =>
                {
                    b.Property<int>("SystemFileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemFileID"));

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("ImageThumbnail")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SystemFileID");

                    b.ToTable("SystemFile", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.SystemUserModel", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BearerToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PhotoThumbnail")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("SystemUser", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.SystemUserTokenModel", b =>
                {
                    b.Property<string>("BearerToken")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BearerToken");

                    b.ToTable("SystemUserTokenModel", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.CriminalConvictionOffenceModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.CriminalConvictionModel", null)
                        .WithMany("Offences")
                        .HasForeignKey("CriminalConvictionModelCriminalConvictionID");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationEvidenceModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationModel", "FundingEligibilityDeclaration")
                        .WithMany("FundingEligibilityDeclarationEvidence")
                        .HasForeignKey("FundingEligibilityDeclarationID");

                    b.Navigation("FundingEligibilityDeclaration");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentEmergencyContactModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentModel", "MedicalLearningSupportAndTripConsent")
                        .WithMany("EmergencyContacts")
                        .HasForeignKey("MedicalLearningSupportAndTripConsentID");

                    b.Navigation("MedicalLearningSupportAndTripConsent");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentLearningDifficultyDisabilityModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentModel", "MedicalLearningSupportAndTripConsent")
                        .WithMany("LearningDifficultiesDisabilities")
                        .HasForeignKey("MedicalLearningSupportAndTripConsentID");

                    b.Navigation("MedicalLearningSupportAndTripConsent");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentMedicalConditionModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentModel", "MedicalLearningSupportAndTripConsent")
                        .WithMany("MedicalConditions")
                        .HasForeignKey("MedicalLearningSupportAndTripConsentID");

                    b.Navigation("MedicalLearningSupportAndTripConsent");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.CriminalConvictionModel", b =>
                {
                    b.Navigation("Offences");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationModel", b =>
                {
                    b.Navigation("FundingEligibilityDeclarationEvidence");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalLearningSupportAndTripConsentModel", b =>
                {
                    b.Navigation("EmergencyContacts");

                    b.Navigation("LearningDifficultiesDisabilities");

                    b.Navigation("MedicalConditions");
                });
#pragma warning restore 612, 618
        }
    }
}
