// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProSolutionFormsAPI.Data;

#nullable disable

namespace ProSolutionFormsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241222125301_Changed Evidence to EvidenceContent in Evidence Model")]
    partial class ChangedEvidencetoEvidenceContentinEvidenceModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProSolutionFormsAPI.Models.ConfigModel", b =>
                {
                    b.Property<string>("ConfigID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("ConfigID")
                        .IsUnique();

                    b.ToTable("Config");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.CriminalConvictionModel", b =>
                {
                    b.Property<int>("CriminalConvictionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CriminalConvictionID"));

                    b.Property<string>("AcademicYearID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfOffence")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Offence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Penalty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<string>("StudentRef")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CriminalConvictionID");

                    b.ToTable("CriminalConviction");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.DropDownIntModel", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("DropDownInt", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.DropDownStringModel", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("DropDownString", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationEvidenceModel", b =>
                {
                    b.Property<int>("FundingEligibilityDeclarationEvidenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FundingEligibilityDeclarationEvidenceID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("EvidenceContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EvidenceContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvidenceFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EvidenceFileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("EvidenceTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FundingEligibilityDeclarationID")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FundingEligibilityDeclarationEvidenceID");

                    b.HasIndex("FundingEligibilityDeclarationID");

                    b.ToTable("FundingEligibilityDeclarationEvidence");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationModel", b =>
                {
                    b.Property<int>("FundingEligibilityDeclarationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FundingEligibilityDeclarationID"));

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeeExemptionReasonID")
                        .HasColumnType("int");

                    b.Property<string>("FeeExemptionReasonOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignedStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignedStudentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<string>("StudentRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FundingEligibilityDeclarationID");

                    b.ToTable("FundingEligibilityDeclaration");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationDifficultyDisabilityModel", b =>
                {
                    b.Property<int>("MedicalInformationDifficultyDisabilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalInformationDifficultyDisabilityID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisabilityCategoryID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalInformationID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalInformationDifficultyDisabilityID");

                    b.HasIndex("MedicalInformationID");

                    b.ToTable("MedicalInformationDifficultyDisability");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationEmergencyContactModel", b =>
                {
                    b.Property<int>("MedicalInformationEmergencyContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalInformationEmergencyContactID"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactOrder")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalInformationID")
                        .HasColumnType("int");

                    b.Property<string>("PostCodeIn")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PostCodeOut")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("RelationshipToStudent")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalInformationEmergencyContactID");

                    b.HasIndex("MedicalInformationID");

                    b.ToTable("MedicalInformationEmergencyContact");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationMedicalConditionModel", b =>
                {
                    b.Property<int>("MedicalInformationMedicalConditionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalInformationMedicalConditionID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalConditionTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalInformationID")
                        .HasColumnType("int");

                    b.Property<string>("MedicationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicationSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalInformationMedicalConditionID");

                    b.HasIndex("MedicalInformationID");

                    b.ToTable("MedicalInformationMedicalCondition");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationModel", b =>
                {
                    b.Property<int>("MedicalInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalInformationID"));

                    b.Property<string>("AcademicYearID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("AccessRequirementDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AgreeInfoIsCorrect")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanContactPriorSchoolOrCollege")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanShareInformationWithPotentialEmployers")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriminalConvictionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasAccessArrangements")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasBeenHospitalisedInLastYear")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasCriminalConvictions")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDifficultyDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasEHCP")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasFSM")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasGivenPhotographicImagesConsent")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasGivenTripConsentParentCarer")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasGivenTripConsentStudent")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasMedicalCondition")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalisationNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCareLeaver")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFromMilitaryServiceFamily")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLAC")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RequiresLearningSupport")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiresRiskAssesment")
                        .HasColumnType("bit");

                    b.Property<string>("SignedParentCarer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignedParentCarerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignedStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignedStudentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<string>("StudentRef")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SupportInPlaceAtPriorSchoolOrCollege")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicalInformationID");

                    b.ToTable("MedicalInformation");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletionStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompletionStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConvictions")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentDetailID")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Student", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.StudentUniqueReferenceModel", b =>
                {
                    b.Property<Guid>("StudentUniqueReferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentRef")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("StudentUniqueReferenceID");

                    b.HasIndex("StudentRef")
                        .IsUnique();

                    b.ToTable("StudentUniqueReference");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.SystemFileModel", b =>
                {
                    b.Property<int>("SystemFileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemFileID"));

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.HasKey("SystemFileID");

                    b.ToTable("SystemFile", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationEvidenceModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationModel", "FundingEligibilityDeclaration")
                        .WithMany("FundingEligibilityDeclarationEvidence")
                        .HasForeignKey("FundingEligibilityDeclarationID");

                    b.Navigation("FundingEligibilityDeclaration");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationDifficultyDisabilityModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.MedicalInformationModel", "MedicalInformation")
                        .WithMany("DifficultiesDisabilities")
                        .HasForeignKey("MedicalInformationID");

                    b.Navigation("MedicalInformation");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationEmergencyContactModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.MedicalInformationModel", "MedicalInformation")
                        .WithMany("EmergencyContacts")
                        .HasForeignKey("MedicalInformationID");

                    b.Navigation("MedicalInformation");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationMedicalConditionModel", b =>
                {
                    b.HasOne("ProSolutionFormsAPI.Models.MedicalInformationModel", "MedicalInformation")
                        .WithMany("MedicalConditions")
                        .HasForeignKey("MedicalInformationID");

                    b.Navigation("MedicalInformation");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.FundingEligibilityDeclarationModel", b =>
                {
                    b.Navigation("FundingEligibilityDeclarationEvidence");
                });

            modelBuilder.Entity("ProSolutionFormsAPI.Models.MedicalInformationModel", b =>
                {
                    b.Navigation("DifficultiesDisabilities");

                    b.Navigation("EmergencyContacts");

                    b.Navigation("MedicalConditions");
                });
#pragma warning restore 612, 618
        }
    }
}
